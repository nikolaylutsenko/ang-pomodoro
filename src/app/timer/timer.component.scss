.timer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 60%;
  margin: 1rem auto 0;
  min-width: 700px;
  padding: 0 2rem 2rem 2rem;
}

.mode-buttons {
  display: flex;
  gap: 5px;
  margin-bottom: 5px;
  width: 100%;
}

.mode-btn {
  flex: 1;
  padding: 1rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1.2rem;
  color: white;

  &:disabled { // Add styles for disabled state
    background-color: #cccccc; // Gray background
    color: #666666; // Darker gray text
    cursor: not-allowed;
    opacity: 0.7; // Slightly transparent
    &:hover { // Ensure hover doesn't change background when disabled
      background-color: #cccccc;
    }
  }

  &:nth-child(1) {
    background: rgba(129, 199, 132, 0.2);
    &:hover { background: rgba(129, 199, 132, 0.3); }
    &.active { background: rgba(129, 199, 132, 0.4); }
  }

  &:nth-child(2) {
    background: rgba(100, 181, 246, 0.2);
    &:hover { background: rgba(100, 181, 246, 0.3); }
    &.active { background: rgba(100, 181, 246, 0.4); }
  }

  &:nth-child(3) {
    background: rgba(186, 104, 200, 0.2);
    &:hover { background: rgba(186, 104, 200, 0.3); }
    &.active { background: rgba(186, 104, 200, 0.4); }
  }
}

.timer {
  margin: 5px 0;
  text-align: center;
  width: 100%;
}

.time {
  font-size: 8rem;
  font-weight: bold;
  font-family: 'Roboto Mono', monospace;
  color: white;
}

.task-input {
  margin-bottom: var(--spacing-md);
  width: 100%;
}

.task-dropdown {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--color-border);
  background-color: var(--color-bg-card);
  color: var(--color-text);
  border-radius: var(--radius-sm);
  font-size: 1rem;
  cursor: pointer;
  transition: border-color 0.3s ease, background-color 0.3s ease;

  &:focus {
    outline: none;
    border-color: var(--color-primary);
  }

  &:disabled {
    background-color: var(--color-secondary);
    cursor: not-allowed;
    opacity: 0.7;
  }
}

.controls {
  display: flex;
  gap: 1rem; // Adjust gap as needed
  width: 100%;
  max-width: 350px; // Limit width similar to mode buttons container
  margin: 2rem auto 0; // Increased top margin, centered horizontally
}

.control-btn {
  flex: 1; // Allow buttons to take equal space
  padding: 0.75rem 1rem; // Match mode-btn padding
  border-radius: 20px; // Match mode-btn border-radius
  font-size: 1.2rem; // Adjust icon size if needed
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.15);
  cursor: pointer;
  transition: all 0.3s ease;
  min-height: 42px; // Match mode-btn min-height
  display: flex;
  align-items: center;
  justify-content: center;
  /* Remove fixed width/height */
  /* width: 60px; */
  /* height: 60px; */
  /* border-radius: 50%; */

  &:hover:not(:disabled) {
    background: rgba(255, 255, 255, 0.2);
  }

  &.active {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.3);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  i {
    // font-size: 1.5rem; // Adjust if needed based on new button size
  }
}

:host-context(.light-theme) {
  .mode-btn {
    color: rgba(0, 0, 0, 0.9);

    &:disabled { // Add styles for disabled state in light theme
      background-color: #e0e0e0; // Lighter gray background for light theme
      color: #888888; // Lighter gray text
      cursor: not-allowed;
      opacity: 0.7;
      &:hover { // Ensure hover doesn't change background when disabled
        background-color: #e0e0e0;
      }
    }

    &:nth-child(1) {
      background: rgba(46, 125, 50, 0.1);
      &:hover { background: rgba(46, 125, 50, 0.15); }
      &.active { background: rgba(46, 125, 50, 0.2); }
    }

    &:nth-child(2) {
      background: rgba(25, 118, 210, 0.1);
      &:hover { background: rgba(25, 118, 210, 0.15); }
      &.active { background: rgba(25, 118, 210, 0.2); }
    }

    &:nth-child(3) {
      background: rgba(123, 31, 162, 0.1);
      &:hover { background: rgba(123, 31, 162, 0.15); }
      &.active { background: rgba(123, 31, 162, 0.2); }
    }
  }

  .time {
    color: rgba(0, 0, 0, 0.9);
  }

  .task-input {
    input {
      border-color: rgba(0, 0, 0, 0.1);
      background: rgba(0, 0, 0, 0.02);
      color: rgba(0, 0, 0, 0.9);

      &::placeholder {
        color: rgba(0, 0, 0, 0.3);
      }

      &:focus {
        border-color: rgba(0, 0, 0, 0.3);
        background: rgba(0, 0, 0, 0.05);
      }

      &.has-value {
        border-color: rgba(0, 0, 0, 0.2);
      }
    }

    .clear-task-btn {
      color: rgba(0, 0, 0, 0.4);

      &:hover {
        color: rgba(0, 0, 0, 0.7);
      }
    }
  }

  .control-btn {
    background: rgba(0, 0, 0, 0.05);
    color: rgba(0, 0, 0, 0.7);

    &:hover {
      background: rgba(0, 0, 0, 0.1);
    }

    &.active {
      background: rgba(0, 0, 0, 0.15);
    }
  }
}

// Adjust media queries if necessary for smaller screens
@media (max-width: 480px) {
  // ...existing code...

  .controls {
    max-width: 90%; // Allow controls to take more width on small screens
    gap: 0.5rem; // Reduce gap
    margin-top: 1.5rem; // Adjust margin for mobile
  }

  .control-btn {
    padding: 0.5rem 0.75rem; // Slightly smaller padding
    font-size: 1rem; // Smaller icons
    min-height: 38px; // Adjust min-height
  }

  // ...existing code...
}
